[Objective]
Requirements file used to gather all specifications for the intranet.

[Guidelines]
1.Do not modify chapter names, they are useful to separate priorities
2.Try to explain any feature/idea as shortly as possible
3.Read all previous features/ideas in order to avoid submission duplicates
4.If you find any items that need grammar editing do it without asking
5.Please do not argue about the colour of the bikeshed
6.Keep it in english, so that everybody can understand

[Main features]
-five main elements to manage: members (accounts, permissions, messages, etc), public wall, tasks, inventories, projects

[Members]
-database model: 
1.join date (automatic, ISO format)
2.username (user input, string, less than 50 characters, no special characters allowed)
3.email (user input, hidden, string, verify validity as email, email to confirm)
4.status (set by admin, active/inactive depending on membership payment, boolean)
5.specialties (user input, list of strings, each string less than 50 characters)
6.interests (user input, list of strings, each string less than 50 characters)
7.current projects (reference to projects ids, list of ids)
8.availability (user input, yes/no switch, boolean)
9.permissions (admin, user)

[Messages]
-can be:
1.private (between 2+ members)
2.posts on public wall
3.attached to other items (tasks,inventories,projects, etc)
-database model:
1.sender (automatic, reference to member)
2.recipient/s (list of references to members, user input)
3.title (optional, user input, string)
4.content (required, user input, string)
5.reference to previous msg (automatic, reference to member, optional)
6.reference to other item (dictionary, object type and id)

[Public wall]
-contains a list of posts; posts can have replies, every post is searchable; posts can have tags and can be sticky
-displayed as a river of news; details and replies on separate page
-database model:
1.publish date (automatic, ISO format)
2.title (optional, user input, string)
3.content (required, user input, textarea, string, rich text editor)
4.author (required, automatic, reference to member)
5.sticky (boolean, user input)
6.tags (user input, list of strings, each string less than 20 characters)
7.messages attached (list of references to messages attached)

[Projects]
-similar to public wall (posts with a description)
-database model:
1.publish date (automatic, ISO format)
2.title (required, user input, string)
3.description (required, user input, string)
4.owner (reference to member)
5.members (list of members)
6.visibility (boolean, public/private)
7.activity (automatic, from "highly active to inactive", based on number of posts per last 7 days)
8.messages attached (list of references to messages attached)

[Inventory]
-database model:
1.item id (automatic, optionally to be printed and sticked on item)
2.item description (required, user input, string)
3.quantity (number, user input, string)
4.inventory date (automatic, ISO format)
5.consumable (boolean, required, user input)

[Nice to haves]
- Invite system for projects (?) - aka "I'd really like it if you helped me with this project" 
- Finance ideas area 
- Wishlists (?) 
- Mini accounting -> membership dues, extra towards specific projects or wishlists

[Ideas for future developments, integrations, etc]
